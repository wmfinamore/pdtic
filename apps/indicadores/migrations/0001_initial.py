# Generated by Django 5.1.4 on 2025-01-26 13:25

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('secretarias', '0004_alter_historicalsecretaria_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Periodicidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(db_comment='Nome da periodicidade', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Periodicidade',
                'verbose_name_plural': 'Periodicidades',
                'db_table_comment': 'Periodicidade para medição dos indicadores',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='UnidadeMedida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(db_comment='Nome da unidade de medido', max_length=100, unique=True)),
                ('valor_fracionado', models.BooleanField(db_comment='Unidade de medida permite valor fracionado?', default=False)),
            ],
            options={
                'verbose_name': 'Unidade de Medida',
                'verbose_name_plural': 'Unidades de Medida',
                'db_table_comment': 'Unidades de Medida',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inclusao', models.DateField(auto_now_add=True, verbose_name='Data de Inclusão')),
                ('hora_inclusao', models.DateTimeField(auto_now_add=True, verbose_name='Hora de Inclusão')),
                ('data_alteracao', models.DateField(auto_now=True, verbose_name='Data de Alteração')),
                ('hora_alteracao', models.DateTimeField(auto_now=True, verbose_name='Hora de Alteração')),
                ('nome', models.CharField(db_comment='Nome do indicador', max_length=120)),
                ('formula', models.TextField(db_comment='Fórmula do indicador')),
                ('responsavel', models.CharField(blank=True, db_comment='Pessoal responsável pelo indicador', max_length=120, null=True)),
                ('fonte_dados', models.CharField(blank=True, db_comment='Fonte de dados para aferição do indicador', max_length=120, null=True)),
                ('resultado_atual', models.DecimalField(blank=True, db_comment='Resultado atual do indicador', decimal_places=2, max_digits=14, null=True)),
                ('valor_meta', models.DecimalField(blank=True, db_comment='Valor da meta para o indicador', decimal_places=2, max_digits=14, null=True)),
                ('sentido', models.CharField(choices=[('MELHOR_CIMA', 'Melhor para cima'), ('MELHOR_BAIXO', 'Melhor para baixo')], db_comment='Sentido do indicador', max_length=120)),
                ('secretaria', models.ForeignKey(db_comment='Secretaria responsável pelo indicador', on_delete=django.db.models.deletion.PROTECT, to='secretarias.secretaria')),
                ('periodicidade', models.ForeignKey(db_comment='Periodicidade de medição do indicador', on_delete=django.db.models.deletion.PROTECT, to='indicadores.periodicidade')),
                ('unidade_medida', models.ForeignKey(db_comment='Unidade de medida do indicador', on_delete=django.db.models.deletion.PROTECT, to='indicadores.unidademedida')),
            ],
            options={
                'verbose_name': 'Indicador',
                'verbose_name_plural': 'Indicadores',
                'db_table_comment': 'Indicadores chave de desempenho',
                'ordering': ['nome'],
                'default_related_name': 'indicadores',
            },
        ),
        migrations.CreateModel(
            name='HistoricalIndicador',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('data_inclusao', models.DateField(blank=True, editable=False, verbose_name='Data de Inclusão')),
                ('hora_inclusao', models.DateTimeField(blank=True, editable=False, verbose_name='Hora de Inclusão')),
                ('data_alteracao', models.DateField(blank=True, editable=False, verbose_name='Data de Alteração')),
                ('hora_alteracao', models.DateTimeField(blank=True, editable=False, verbose_name='Hora de Alteração')),
                ('nome', models.CharField(db_comment='Nome do indicador', max_length=120)),
                ('formula', models.TextField(db_comment='Fórmula do indicador')),
                ('responsavel', models.CharField(blank=True, db_comment='Pessoal responsável pelo indicador', max_length=120, null=True)),
                ('fonte_dados', models.CharField(blank=True, db_comment='Fonte de dados para aferição do indicador', max_length=120, null=True)),
                ('resultado_atual', models.DecimalField(blank=True, db_comment='Resultado atual do indicador', decimal_places=2, max_digits=14, null=True)),
                ('valor_meta', models.DecimalField(blank=True, db_comment='Valor da meta para o indicador', decimal_places=2, max_digits=14, null=True)),
                ('sentido', models.CharField(choices=[('MELHOR_CIMA', 'Melhor para cima'), ('MELHOR_BAIXO', 'Melhor para baixo')], db_comment='Sentido do indicador', max_length=120)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('secretaria', models.ForeignKey(blank=True, db_comment='Secretaria responsável pelo indicador', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='secretarias.secretaria')),
                ('periodicidade', models.ForeignKey(blank=True, db_comment='Periodicidade de medição do indicador', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='indicadores.periodicidade')),
                ('unidade_medida', models.ForeignKey(blank=True, db_comment='Unidade de medida do indicador', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='indicadores.unidademedida')),
            ],
            options={
                'verbose_name': 'historical Indicador',
                'verbose_name_plural': 'historical Indicadores',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
